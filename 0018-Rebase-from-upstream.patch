From af84f0737075a67e7ecb6a7995c035b41fce485c Mon Sep 17 00:00:00 2001
From: William Woodall <william@osrfoundation.org>
Date: Tue, 24 Mar 2015 17:54:43 -0700
Subject: [PATCH 18/70] Rebase from 'upstream'

---
 CMakeLists.txt                 |  4 ----
 cmake/internal/FindOS.cmake    | 36 ++++++++++++++++++------------------
 libstageplugin/p_graphics.cc   |  4 ----
 libstageplugin/p_simulation.cc |  5 -----
 package.xml                    |  1 -
 stage.pc.in                    |  2 +-
 6 files changed, 19 insertions(+), 33 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 39add53..8710637 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -102,7 +102,6 @@ ELSE( PNG_FOUND )
    MESSAGE( ${INDENT} "PNG library not detected" )
 ENDIF( PNG_FOUND )
    
-set (FLTK_SKIP_FLUID TRUE)
 find_package( FLTK REQUIRED )
 IF( FLTK_FOUND )
 #  MESSAGE( STATUS ${INDENT} "FLTK_LIBRARIES=${FLTK_LIBRARIES}" )
@@ -139,9 +138,6 @@ ENDIF( PLAYER_FOUND )
 CONFIGURE_FILE (${CMAKE_CURRENT_SOURCE_DIR}/stage.pc.in ${CMAKE_CURRENT_BINARY_DIR}/stage.pc @ONLY)
 INSTALL (FILES ${CMAKE_CURRENT_BINARY_DIR}/stage.pc DESTINATION ${PROJECT_LIB_DIR}/pkgconfig/)
 
-# Install catkin package.xml
-install(FILES package.xml DESTINATION share/stage)
-
 MESSAGE( STATUS "Installation path CMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}" )
 
 # all targets need these include directories
diff --git a/cmake/internal/FindOS.cmake b/cmake/internal/FindOS.cmake
index 5666bbc..cec4491 100644
--- a/cmake/internal/FindOS.cmake
+++ b/cmake/internal/FindOS.cmake
@@ -45,28 +45,28 @@ ELSE (PROJECT_OS_LINUX)
 ENDIF (PROJECT_OS_LINUX)
 
 # 32 or 64 bit Linux
-# IF (PROJECT_OS_LINUX)
-#     # Set the library directory suffix accordingly
-#     IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
-#         SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
-#         MESSAGE (STATUS "Linux x86_64 Detected")
-#     ELSEIF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ppc64")
-#         MESSAGE (STATUS "Linux ppc64 Detected")
-#         SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
-#     ELSEIF ($CMAKE_SYSTEM_PROCESSOR} STREQUAL "s390x")
-# 	MESSAGE (STATEUS "Linux s390x Detected")
-# 	SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
-#     ENDIF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
-# ENDIF (PROJECT_OS_LINUX)
+IF (PROJECT_OS_LINUX)
+    # Set the library directory suffix accordingly
+    IF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+        SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
+        MESSAGE (STATUS "Linux x86_64 Detected")
+    ELSEIF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ppc64")
+        MESSAGE (STATUS "Linux ppc64 Detected")
+        SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
+    ELSEIF ($CMAKE_SYSTEM_PROCESSOR} STREQUAL "s390x")
+	MESSAGE (STATEUS "Linux s390x Detected")
+	SET (PROJECT_PROC_64BIT TRUE BOOL INTERNAL)
+    ENDIF (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+ENDIF (PROJECT_OS_LINUX)
 
-# IF(PROJECT_PROC_64BIT)
+IF(PROJECT_PROC_64BIT)
     # Set the install path to lib64
-    # SET(PROJECT_LIB_DIR "lib64")
-    # SET(PROJECT_PLUGIN_DIR "lib64/${PROJECT_NAME}-${APIVERSION}")
-# ELSE (PROJECT_PROC_64BIT)
+    SET(PROJECT_LIB_DIR "lib64")
+    SET(PROJECT_PLUGIN_DIR "lib64/${PROJECT_NAME}-${APIVERSION}")
+ELSE (PROJECT_PROC_64BIT)
     SET(PROJECT_LIB_DIR "lib")
     SET(PROJECT_PLUGIN_DIR "lib/${PROJECT_NAME}-${APIVERSION}")
-# ENDIF (PROJECT_PROC_64BIT)
+ENDIF (PROJECT_PROC_64BIT)
 
 MESSAGE(STATUS "Installing Libraries to ${CMAKE_INSTALL_PREFIX}/${PROJECT_LIB_DIR}")
 MESSAGE(STATUS "Installing Plugins to ${CMAKE_INSTALL_PREFIX}/${PROJECT_PLUGIN_DIR}")
diff --git a/libstageplugin/p_graphics.cc b/libstageplugin/p_graphics.cc
index 516f4ae..af5d0e0 100644
--- a/libstageplugin/p_graphics.cc
+++ b/libstageplugin/p_graphics.cc
@@ -232,10 +232,8 @@ int InterfaceGraphics2d::ProcessMessage(QueuePointer & resp_queue,
 			PLAYER_GRAPHICS2D_CMD_POINTS, this->addr)
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
 					PLAYER_GRAPHICS2D_CMD_POLYLINE, this->addr)
-#ifdef PLAYER_GRAPHICS2D_CMD_MULTILINE
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
                                         PLAYER_GRAPHICS2D_CMD_MULTILINE, this->addr)
-#endif
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
 					PLAYER_GRAPHICS2D_CMD_POLYGON, this->addr)) {
 		Message msg(*hdr, data);
@@ -276,7 +274,6 @@ void PlayerGraphics2dVis::RenderItem(Message & item) {
 	}
 		break;
 
-#ifdef PLAYER_GRAPHICS2D_CMD_MULTILINE
         case PLAYER_GRAPHICS2D_CMD_MULTILINE: {
                 player_graphics2d_cmd_multiline_t
                                 & data =
@@ -288,7 +285,6 @@ void PlayerGraphics2dVis::RenderItem(Message & item) {
                 glEnd();
         }
                 break;
-#endif
 
 
 
diff --git a/libstageplugin/p_simulation.cc b/libstageplugin/p_simulation.cc
index 9fb2046..83d410e 100644
--- a/libstageplugin/p_simulation.cc
+++ b/libstageplugin/p_simulation.cc
@@ -60,11 +60,6 @@ extern PlayerTime* GlobalTime;
 
 #define DRIVER_ERROR(X) printf( "Stage driver error: %s\n", X )
 
-#ifndef PLAYER_CAPABILITIES_REQ
-#ifdef PLAYER_CAPABILTIES_REQ
-#define PLAYER_CAPABILITIES_REQ PLAYER_CAPABILTIES_REQ
-#endif
-#endif
 
 ////////////////////////////////////////////////////////////////////////////////////
 
diff --git a/package.xml b/package.xml
index edc1c3f..8cfc538 100644
--- a/package.xml
+++ b/package.xml
@@ -36,7 +36,6 @@
 
   <run_depend>catkin</run_depend>
   <run_depend>gtk2</run_depend>
-  <run_depend>fluid</run_depend>
   <run_depend>libjpeg</run_depend>
   <run_depend>opengl</run_depend>
 
diff --git a/stage.pc.in b/stage.pc.in
index 8d63f01..873fd27 100644
--- a/stage.pc.in
+++ b/stage.pc.in
@@ -1,4 +1,4 @@
-prefix="@CMAKE_INSTALL_PREFIX@"
+prefix=@CMAKE_INSTALL_PREFIX@
 
 Name: stage
 Description: Stage robot simulation program, C++ library and Player plugin - part of the Player Project (http://playerstage.org)
-- 
2.6.4 (Apple Git-63)

